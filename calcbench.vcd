$date
  Tue Mar 11 14:50:09 2025
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module calcbench $end
$var reg 4 ! bench_a[3:0] $end
$var reg 4 " bench_b[3:0] $end
$var reg 2 # bench_c[1:0] $end
$var reg 5 $ bench_f[4:0] $end
$scope module c1 $end
$var reg 4 % a[3:0] $end
$var reg 4 & b[3:0] $end
$var reg 2 ' c[1:0] $end
$var reg 5 ( result[4:0] $end
$scope module alu1 $end
$var reg 4 ) d[3:0] $end
$var reg 4 * e[3:0] $end
$var reg 2 + f[1:0] $end
$var reg 5 , q[4:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0000 !
b0000 "
b00 #
b00000 $
b0000 %
b0000 &
b00 '
b00000 (
b0000 )
b0000 *
b00 +
b00000 ,
#10000000
b0001 "
b00001 $
b0001 &
b00001 (
b0001 *
b00001 ,
#15000000
b01 #
b01111 $
b01 '
b01111 (
b01 +
b01111 ,
#20000000
b0001 !
b00000 $
b0001 %
b00000 (
b0001 )
b00000 ,
#25000000
b00 #
b00010 $
b00 '
b00010 (
b00 +
b00010 ,
#30000000
b0010 "
b00011 $
b0010 &
b00011 (
b0010 *
b00011 ,
#40000000
b0010 !
b00100 $
b0010 %
b00100 (
b0010 )
b00100 ,
#45000000
b01 #
b00000 $
b01 '
b00000 (
b01 +
b00000 ,
#50000000
b0100 "
b10 #
b0100 &
b10 '
b0100 *
b10 +
#60000000
b0111 !
b00100 $
b0111 %
b00100 (
b0111 )
b00100 ,
#65000000
b11 #
b00111 $
b11 '
b00111 (
b11 +
b00111 ,
#70000000
b00 #
b01011 $
b00 '
b01011 (
b00 +
b01011 ,
